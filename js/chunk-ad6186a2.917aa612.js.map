{"version":3,"sources":["webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/dependent/index.ts"],"names":["Vue","extend","name","props","openDelay","type","Number","String","default","closeDelay","data","openTimeout","undefined","closeTimeout","methods","clearDelay","clearTimeout","this","runDelay","cb","_this","delay","parseInt","concat","setTimeout","isActive","open","close","stackElement","stackExclude","stackMinZIndex","computed","activeZIndex","window","content","$refs","index","getMaxZIndex","getZIndex","exclude","arguments","length","base","$el","zis","activeElements","_toConsumableArray","document","getElementsByClassName","includes","push","Math","max","apply","_arrayWithoutHoles","arr","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","_nonIterableSpread","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","baseMixins","mixins","Delayable","Toggleable","activator","validator","val","_typeof","disabled","Boolean","internalActivator","openOnClick","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","getSlotType","consoleError","addActivatorEvents","beforeDestroy","removeActivatorEvents","getActivator","genActivatorListeners","keys","Object","_i","_keys","key","addEventListener","genActivator","node","getSlot","assign","getValueProxy","on","attrs","genActivatorAttributes","role","mouseenter","e","mouseleave","click","focus","stopPropagation","target","querySelector","vm","componentInstance","$options","some","m","options","elm","currentTarget","nodeType","Node","ELEMENT_NODE","getContentSlot","self","_i2","_keys2","removeEventListener","resetActivator","validateAttachTarget","removeActivator","forEach","parentNode","removeChild","Bootable","attach","contentClass","hasDetached","initDetach","hasContent","$nextTick","beforeMount","firstChild","nextSibling","insertBefore","deactivated","destroyed","_this2","isConnected","observer","MutationObserver","list","record","removedNodes","disconnect","observe","subtree","childList","getScopeIdAttrs","scopeId","getObjectValueByPath","$vnode","_defineProperty","_isDestroyed","appendChild","consoleWarn","searchChildren","children","results","child","isDependent","$children","closeDependents","openDependents","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","overlay"],"mappings":"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","file":"js/chunk-ad6186a2.917aa612.js","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: (this.openOnClick && !this.openOnHover) ? 'button' : undefined,\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else if (this.openOnClick) {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options {\n  $el: HTMLElement\n  $refs: {\n    content?: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\nfunction removeActivator (activator: VNode[]) {\n  activator.forEach(node => {\n    node.elm &&\n    node.elm.parentNode &&\n    node.elm.parentNode.removeChild(node.elm)\n  })\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    if (\n      this.$refs.content &&\n      this.$refs.content.parentNode\n    ) {\n      this.$refs.content.parentNode.removeChild(this.$refs.content)\n    }\n  },\n\n  destroyed () {\n    if (this.activatorNode) {\n      const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n      if (this.$el.isConnected) {\n        // Component has been destroyed but the element still exists, we must be in a transition\n        // Wait for the transition to finish before cleaning up the detached activator\n        const observer = new MutationObserver(list => {\n          if (\n            list.some(record => Array.from(record.removedNodes).includes(this.$el))\n          ) {\n            observer.disconnect()\n            removeActivator(activator)\n          }\n        })\n        observer.observe(this.$el.parentNode!, { subtree: false, childList: true })\n      } else {\n        removeActivator(activator)\n      }\n    }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options {\n  $el: HTMLElement\n  $refs: {\n    content?: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<Vue & options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n"],"sourceRoot":""}